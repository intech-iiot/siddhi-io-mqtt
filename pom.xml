<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.wso2</groupId>
        <artifactId>wso2</artifactId>
        <version>5</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <groupId>io.siddhi.extension.io.mqtt</groupId>
    <artifactId>siddhi-io-mqtt-parent</artifactId>
    <version>3.0.1-SNAPSHOT</version>
    <name>Siddhi IO MQTT Extension Parent</name>
    <modules>
        <module>component</module>
    </modules>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wso2.siddhi</groupId>
                <artifactId>siddhi-extension-text-output-mapper</artifactId>
                <version>${siddhi.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.siddhi</groupId>
                <artifactId>siddhi-core</artifactId>
                <version>${siddhi.version}</version>
            </dependency>
            <dependency>
                <groupId>io.siddhi</groupId>
                <artifactId>siddhi-query-api</artifactId>
                <version>${siddhi.version}</version>
            </dependency>
            <dependency>
                <groupId>io.siddhi</groupId>
                <artifactId>siddhi-annotations</artifactId>
                <version>${siddhi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.log4j.wso2</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.paho</groupId>
                <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
                <version>${paho.mqtt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.moquette</groupId>
                <artifactId>moquette-broker</artifactId>
                <version>${moquette.version}</version>
            </dependency>
            <dependency>
                <groupId>io.siddhi.extension.map.binary</groupId>
                <artifactId>siddhi-map-binary</artifactId>
                <version>${siddhi.map.binary.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.siddhi.extension.map.xml</groupId>
                <artifactId>siddhi-map-xml</artifactId>
                <version>${xml.mapper.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.siddhi.extension.map.json</groupId>
                <artifactId>siddhi-map-json</artifactId>
                <version>${json.mapper.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <properties>
        <siddhi.version>5.1.2</siddhi.version>
        <siddhi.version.range>[5.0.0,6.0.0)</siddhi.version.range>
        <paho.mqtt.version>1.2.1</paho.mqtt.version>
        <carbon.feature.plugin.version>3.0.0</carbon.feature.plugin.version>
        <siddhi.map.binary.version>2.0.2</siddhi.map.binary.version>
        <moquette.version>0.8</moquette.version>
        <log4j.version>1.2.17.wso2v1</log4j.version>
        <json.mapper.version>5.0.4</json.mapper.version>
        <xml.mapper.version>5.0.3</xml.mapper.version>
        <jacoco.plugin.version>0.7.9</jacoco.plugin.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <build>
        <!--suppress MavenDuplicatePluginInspection -->
        <plugins>
            <plugin>
                <groupId>org.wso2.carbon.maven</groupId>
                <!--no-->
                <artifactId>carbon-feature-plugin</artifactId>
                <version>${carbon.feature.plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <preparationGoals>clean install -Pdocumentation-deploy</preparationGoals>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.plugin.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${basedir}/target/coverage-reports/jacoco.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${basedir}/target/coverage-reports/jacoco.exec</dataFile>
                            <outputDirectory>${basedir}/target/coverage-reports/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.4</version>
                <configuration>
                    <!--
                        Enables analysis which takes more memory but finds more bugs.
                        If you run out of memory, changes the value of the effort element
                        to 'Low'.
                    -->
                    <effort>Max</effort>
                    <!-- Build fail if problems are found -->
                    <failOnError>false</failOnError>
                    <!-- Reports all bugs (other values are medium and max) -->
                    <threshold>Low</threshold>
                    <!-- Produces XML report -->
                    <xmlOutput>true</xmlOutput>
                    <!-- Configures the directory in which the XML report is created -->
                    <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
                </configuration>
                <executions>
                    <!--
                        Ensures that FindBugs inspects source code when project is compiled.
                    -->
                    <execution>
                        <id>analyze-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>bintray-andsel-maven</id>
            <name>bintray</name>
            <url>http://dl.bintray.com/andsel/maven</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>wso2</id>
            <name>wso2</name>
            <url>https://maven.wso2.org/nexus/content/repositories/releases/</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>wso2-nexus</id>
            <name>wso2 nexus</name>
            <url>http://maven.wso2.org/nexus/content/groups/wso2-public</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>wso2.releases</id>
            <name>wso2 plugins releases</name>
            <url>http://maven.wso2.org/nexus/content/repositories/releases</url>
        </pluginRepository>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>wso2-nexus</id>
            <name>wso2 plugins nexus</name>
            <url>http://maven.wso2.org/nexus/content/groups/wso2-public</url>
        </pluginRepository>
    </pluginRepositories>

    <scm>
        <url>https://github.com/siddhi-io/siddhi-io-mqtt.git</url>
        <developerConnection>scm:git:https://github.com/siddhi-io/siddhi-io-mqtt.git</developerConnection>
        <connection>scm:git:https://github.com/siddhi-io/siddhi-io-mqtt.git</connection>
        <tag>HEAD</tag>
    </scm>
</project>
